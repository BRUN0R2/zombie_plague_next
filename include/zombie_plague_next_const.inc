#if defined _zombie_plague_next_const_included
	#endinput
#endif

#define _zombie_plague_next_const_included

#define zpn_is_invalid_array(%0) (%0 == Invalid_Array || !ArraySize(%0))
#define zpn_is_null_string(%0) bool:(%0[0] == EOS)

stock const PATH_SETTINGS_CONFIG[] = "zombie_plague_next/configs.json";
stock const PATH_SETTINGS_CLASSES[] = "zombie_plague_next/classes.json";
stock const PATH_SETTINGS_ITEMS[] = "zombie_plague_next/items.json";
stock const PATH_SETTINGS_GAMEMODES[] = "zombie_plague_next/gamemodes.json";
stock const SETTINGS_SECTION_CONFIG[] = "Main Config";

enum
{
	ZPN_RETURN_CONTINUE = 333,
	ZPN_RETURN_HANDLED,
	ZPN_RETURN_SUPERCED
}

enum eItemTeams
{
	ITEM_TEAM_ZOMBIE = 0,
	ITEM_TEAM_HUMAN,
}

enum eClassTypes
{
	CLASS_TEAM_TYPE_ZOMBIE = 0,
	CLASS_TEAM_TYPE_HUMAN,
	CLASS_TEAM_TYPE_ZOMBIE_SPECIAL,
	CLASS_TEAM_TYPE_HUMAN_SPECIAL,
}

enum ePropItemRegisters
{
	ITEM_PROP_REGISTER_NAME = 0, // string
	ITEM_PROP_REGISTER_COST, // int
	ITEM_PROP_REGISTER_TEAM, // eItemTeams
	ITEM_PROP_REGISTER_LIMIT_PLAYER_PER_ROUND, // int
	ITEM_PROP_REGISTER_LIMIT_MAX_PER_ROUND, // int
	ITEM_PROP_REGISTER_LIMIT_PER_MAP, // int
	ITEM_PROP_REGISTER_MIN_ZOMBIES, // int
	ITEM_PROP_REGISTER_ALLOW_BUY_SPECIAL_MODS, // bool
	ITEM_PROP_REGISTER_FLAG, // int (flags ADMIN_RCON, etc...)
}

enum ePropClassRegisters
{
	CLASS_PROP_REGISTER_TYPE = 0, // eClassesType
	CLASS_PROP_REGISTER_NAME, // string
	CLASS_PROP_REGISTER_INFO, // string
	CLASS_PROP_REGISTER_MODEL, // string
	CLASS_PROP_REGISTER_MODEL_VIEW, // string
	CLASS_PROP_REGISTER_BODY, // int
	CLASS_PROP_REGISTER_HEALTH, // float
	CLASS_PROP_REGISTER_ARMOR, // float
	CLASS_PROP_REGISTER_SPEED, // float
	CLASS_PROP_REGISTER_GRAVITY, // float
	CLASS_PROP_REGISTER_KNOCKBACK, // float
	CLASS_PROP_REGISTER_CLAW_WEAPONLIST, // string
	CLASS_PROP_REGISTER_SKIN, // int
	CLASS_PROP_REGISTER_FIND_NAME, // string,
	CLASS_PROP_REGISTER_NV_COLOR, // string, hex format: #ff0000
	CLASS_PROP_REGISTER_HIDE_MENU, // bool
	CLASS_PROP_REGISTER_UPDATE_HITBOX, // bool
	CLASS_PROP_REGISTER_BLOOD_COLOR, // int
	CLASS_PROP_REGISTER_SILENT_FOOTSTEPS, // bool
}

enum eGameModeDeathMatchTypes
{
	GAMEMODE_DEATHMATCH_DISABLED = 0,
	GAMEMODE_DEATHMATCH_ONLY_TR,
	GAMEMODE_DEATHMATCH_ONLY_CT,
	GAMEMODE_DEATHMATCH_RANDOM,
	GAMEMODE_DEATHMATCH_BALANCE,
}

enum ePropGameModeRegisters
{
	GAMEMODE_PROP_REGISTER_NAME = 0, // string
	GAMEMODE_PROP_REGISTER_NOTICE, // string
	GAMEMODE_PROP_REGISTER_HUD_COLOR, // string, hex format: #ff0000
	GAMEMODE_PROP_REGISTER_CHANCE, // int
	GAMEMODE_PROP_REGISTER_MIN_PLAYERS, // int
	GAMEMODE_PROP_REGISTER_ROUND_TIME, // float
	GAMEMODE_PROP_REGISTER_CHANGE_CLASS, // bool
	GAMEMODE_PROP_REGISTER_DEATHMATCH, // eGameModeDeathMatchTypes
	GAMEMODE_PROP_REGISTER_RESPAWN_TIME, // float
	GAMEMODE_PROP_REGISTER_FIND_NAME, // string
}